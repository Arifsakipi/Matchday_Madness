@model List<MatchdayMadness2.Models.Matches>

@{
    ViewData["Title"] = "Home Page";
    Layout = "_Layout";
}

<div class="text-center">
    <h1 class="display-4">Welcome to Matchday Madness</h1>
    <p>Catch the latest match details below!</p>
</div>

<div class="text-center">
    <p>Click below to Log in or Sign up</p>
    
</div>

<!-- Login Modal -->
<div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="loginModalLabel">Log in</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Content will be loaded here via AJAX -->
                <div id="LoginContent"></div>
            </div>
        </div>
    </div>
</div>

<!-- Sign Up Modal -->
<div class="modal fade" id="signUpModal" tabindex="-1" role="dialog" aria-labelledby="signUpModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="signUpModalLabel">Sign up</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                
                <div id="SignUpContent"></div>
            </div>
        </div>
    </div>
</div>


<div class="container mt-5">
    <h2 class="mb-4">Latest Matches</h2>

    <div class="row">
        @if (Model != null)
        {
            foreach (var match in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">@match.HomeTeam.Name vs @match.AwayTeam.Name</h5>
                            <p class="card-text">
                                <strong>Date:</strong> <span class="match-date" data-matchdate="@match.Date.ToString("yyyy-MM-ddTHH:mm:ss")">@match.Date.ToString("yyyy-MM-dd HH:mm")</span><br />
                                <strong>Stadium:</strong> @match.Stadium<br />
                                <strong>Status: </strong> <span class="match-status">@match.Status</span>
                            </p>
                            <a href="@Url.Action("Details", "Matches", new { id = match.id })" class="btn btn-primary">Match Details</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col">
                <p>No matches available at the moment.</p>
            </div>
        }
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>


            function updateMatchStatuses() {

                const now = new Date();

       
                document.querySelectorAll('.card').forEach(function (card) {
                    const matchDateElement = card.querySelector('.match-date');
                    const matchStatusElement = card.querySelector('.match-status');
                    const matchDate = new Date(matchDateElement.dataset.matchdate);  

            
                    if (matchDate > now) {
                        matchStatusElement.textContent = "Upcoming";
                    } else if (matchDate < now && (now - matchDate) <= (90 * 60 * 1000)) { 
                        matchStatusElement.textContent = "Ongoing";
                    } else {
                        matchStatusElement.textContent = "Finished";
                    }
                });

            }
            document.addEventListener('DOMContentLoaded', function () {
                updateMatchStatuses(); 
                setInterval(updateMatchStatuses, 500); 
            });



            $(document).ready(function () {
                $('#LoginButton').on('click', function () {
                    $('#loginModal').modal('show');
                    // Load the form into the modal
                    $('#LoginContent').load('/User/LoginPartial');
                });

                $('#SignUpButton').on('click', function () {
                    $('#signUpModal').modal('show');
                    // Load the form into the modal
                    $('#SignUpContent').load('/User/SignUpPartial');
                });
            });

    
            // $(document).on('submit', '#SignUpForm', function (e) {
            //     e.preventDefault();
            //     $.ajax({
            //         url: $(this).attr('action'),
            //         type: 'POST',
            //         data: $(this).serialize(),
            //         success: function () {
            //             $('#signUpModal').modal('hide');
            //             reloadTeamList();
            //         },
            //         error: function () {
            //             alert("Error while deleting the team.");
            //         }
            //     });
            // });
    


</script>

